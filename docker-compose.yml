services:
  api:
    build: ./api
    container_name: api_backend
    ports:
      - '4000:4000'
    volumes:
      - ./api:/app
      - /node_modules
    depends_on:
      - mongo
    networks:
      - mongo-network
  client:
      build: ./client
      container_name: client_frontend
      ports:
        - '3000:3000'
      volumes:
        - ./client:/app
        - /node_modules
      environment:
        - WATCHPACK_POLLING=true
      stdin_open: true
      tty: true

  mongo:
    image: mongo:4.4.27
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ADMIN_NAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ADMIN_PASS:-example}
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    ports:
      - 8081:8081
    profiles:
      - mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_ADMIN_NAME:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_ADMIN_PASS:-example}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_ADMIN_NAME:-root}:${DB_ADMIN_PASS:-example}@mongo:27017/
      ME_CONFIG_BASICAUTH: 'true'
    networks:
      - mongo-network

networks:
  mongo-network: